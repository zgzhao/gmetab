% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spaths.R
\name{all_spaths_list}
\alias{all_spaths_list}
\alias{all_spaths_nodes}
\alias{all_spaths_edges}
\title{info of all simple paths}
\usage{
all_spaths_list(obj, from, to, mc.cores)
all_spaths_nodes(obj, from, to, mc.cores)
all_spaths_nodes(obj)
all_spaths_edges(obj, from, to, mc.cores)
all_spaths_edges(obj)
}
\arguments{
\item{object}{xgraph object or list returned by all_spaths_list}

\item{from}{character vector of length 1, name of start node}

\item{to}{character vector of length 1, name of end node}

\item{mc.cores}{refer to \code{\link{mclapply}}}

\item{n.max}{numeric, max number of nodes allowed in the graph. Don't set big number (default 1000) since simple path searching for big network is very very time-consuming.}
}
\value{
character list or vector
}
\description{
simple paths info: list, nodes and edges
}
\details{
Wrapers for \code{\link{igraph::all_simple_paths}}. Parallel computing may be evoked if source or target number is more than one. In these series of functions, \code{all_spaths_list} is the basic function; \code{all_spaths_nodes} and \code{all_spaths_edges} extract infos from the results of \code{all_spaths_list} implicitly or explicitly.
}
\examples{
library(syzMetab)
d.path <- file.path(path.package("syzMetab"), "KEGG")
gg <- make_mgraph("ko00010", d.path)
vv <- vnames(gg)
(splist <- all_spaths_list(gg, vv[1], vv[6]))
all_spaths_nodes(splist)
all_spaths_nodes(gg, vv[1], vv[6])
all_spaths_edges(splist)
all_spaths_edges(gg, vv[1], vv[6])
}
\author{
ZG Zhao
}
